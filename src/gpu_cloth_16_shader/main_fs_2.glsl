#version 300 es
precision mediump float;
precision highp int;

layout(location = 0) out highp vec4 _4;

void main()
{
    highp float _1188 = gl_FragCoord.y + (-449.0);
    highp float _1264 = (gl_FragCoord.x + (-799.0)) * (-0.0011111111380159854888916015625);
    highp float _1275 = _1188 * (-0.00110800866968929767608642578125) + 0.07467623054981231689453125;
    highp float _1276 = _1188 * (-8.297359454445540904998779296875e-05) + (-0.997207820415496826171875);
    highp float _1283 = 1.0 / sqrt(_1276 * _1276 + (_1264 * _1264 + (_1275 * _1275)));
    highp float _1285 = _1275 * _1283;
    highp float _1321 = max(_1285, 0.0);
    highp float _1571 = abs(_1321);
    highp float _1573 = (-0.155972003936767578125) * _1571 + 1.56466996669769287109375;
    highp float _1575 = sqrt(1.0 - _1571);
    highp float _1582;
    if (_1321 >= 0.0)
    {
        _1582 = _1573 * _1575;
    }
    else
    {
        _1582 = (-_1573) * _1575 + 3.1415927410125732421875;
    }
    highp float _1329 = 0.1500000059604644775390625 * pow((-_1582) * 57.2957763671875 + 93.88500213623046875, -1.2530000209808349609375) + cos(_1582);
    highp vec3 _1591 = exp(vec3(-((0.0488447882235050201416015625 / _1329) + (0.00199639122001826763153076171875 / _1329)), -((0.114130906760692596435546875 / _1329) + (0.0030160858295857906341552734375 / _1329)), -((0.254685342311859130859375 / _1329) + (0.0044257682748138904571533203125 / _1329))));
    highp float _1372 = _1285 * 0.074789948761463165283203125 + ((_1276 * _1283) * (-0.997199356555938720703125));
    highp float _1595 = 1.0 + pow(_1372 * 0.5 + 0.5, 2.0);
    highp float _1606 = pow(((-1.60000002384185791015625) * _1372 + 1.0) + 0.640000045299530029296875, 1.5);
    highp float _1621 = abs(0.074789948761463165283203125);
    highp float _1617 = max(0.0, 1.0 - exp(((-((-0.155972003936767578125) * _1621 + 1.56466996669769287109375)) * sqrt(1.0 - _1621) + 1.61107313632965087890625) * (-0.666666686534881591796875)));
    highp float _1618 = 1000.0 * _1617;
    highp float _1398 = _1618 * ((_1595 * 3.47048626281321048736572265625e-07 + (4.5753907329526555258780717849731e-08 / _1606)) * 134916.921875);
    highp float _1399 = _1618 * ((_1595 * 8.109150826385302934795618057251e-07 + (6.9123586854402674362063407897949e-08 / _1606)) * 62500.4609375);
    highp float _1400 = _1618 * ((_1595 * 1.8095727227773750200867652893066e-06 + (1.0143111239813151769340038299561e-07 / _1606)) * 29533.111328125);
    highp float _1401 = _1591.x;
    highp float _1403 = _1591.y;
    highp float _1405 = _1591.z;
    highp vec3 _1642 = pow(vec3(_1398 * (1.0 - _1401), _1399 * (1.0 - _1403), _1400 * (1.0 - _1405)), vec3(1.5));
    highp vec3 _1652 = pow(vec3(_1398, _1399, _1400) * _1591, vec3(0.5));
    highp float _1685 = (_1372 - 0.999956429004669189453125) * 49932.19140625;
    highp float _1927 = (_1685 < 0.0) ? 0.0 : _1685;
    highp float _1928 = (_1927 > 1.0) ? 1.0 : _1927;
    highp float _1690 = (_1928 * _1928) * ((-2.0) * _1928 + 3.0);
    highp float _1464 = _1617 * 19000000.0;
    highp vec3 _1743 = pow(vec3(min(max(_1642.x * ((_1652.x - 1.0) * 0.6779563426971435546875 + 1.0) + (0.100000001490116119384765625 * _1401 + ((_1464 * _1401) * _1690)), 0.0), 1024.0), min(max(_1642.y * ((_1652.y - 1.0) * 0.6779563426971435546875 + 1.0) + (0.100000001490116119384765625 * _1403 + ((_1464 * _1403) * _1690)), 0.0), 1024.0), min(max(_1642.z * ((_1652.z - 1.0) * 0.6779563426971435546875 + 1.0) + (0.100000001490116119384765625 * _1405 + ((_1464 * _1405) * _1690)), 0.0), 1024.0)), vec3(2.349999904632568359375));
    highp vec3 _1753 = pow(_1743, vec3(0.935000002384185791015625));
    _4 = vec4(_1743 / vec3(_1753.x * 2.88266658782958984375 + 789.74591064453125, _1753.y * 2.88266658782958984375 + 789.74591064453125, _1753.z * 2.88266658782958984375 + 789.74591064453125), 1.0);
}

